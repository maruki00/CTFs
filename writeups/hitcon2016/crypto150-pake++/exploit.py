#!/usr/bin/env python
from pwn import *
import string
import base64
import subprocess

class PAKE(object):
    def __init__(self):
        self.r = r = remote('52.198.13.246', 20432)

        r.recvuntil('prefix: ')
        prefix = base64.b64decode(r.recvuntil('\n'))

        p = subprocess.Popen(['./pow'], stdin=-1, stdout=-1)
        block, _ = p.communicate(prefix)

        r.sendline(base64.b64encode(block[len(prefix):]))

    def prime(self):
        self.r.recvuntil('p = ')
        return int(self.r.recvline()[:-1])

    def bb(self):
        self.r.recvuntil('Server send ')
        return int(self.r.recvline()[:-1])

    def aa(self, val):
        self.r.sendline(str(val))

    def flag(self):
        self.r.recvuntil('Flag is (of course after encryption :D): ')
        return int(self.r.recvline()[:-1])

def main():
    c1 = PAKE()
    c2 = PAKE()

    p1 = c1.prime()
    p2 = c2.prime()

    if p1 != p2:
        print 'FAILED'
        return

    a1 = c1.bb()
    a2 = c2.bb()
    c1.aa(a2)
    c2.aa(a1)

    c3 = PAKE()

    p1 = c1.prime()
    p2 = c3.prime()
    if p1 != p2:
        print 'FAILED'
        return

    a1 = c1.bb()
    a2 = c3.bb()
    c1.aa(a2)
    c3.aa(a1)

    p1 = c2.prime()
    p2 = c3.prime()

    if p1 != p2:
        print 'FAILED'
        return

    a1 = c2.bb()
    a2 = c3.bb()
    c2.aa(a2)
    c3.aa(a1)

    k1 = c1.flag()
    k2 = c2.flag()
    k3 = c3.flag()
    print k1
    print k2
    print k3
    print hex(k1 ^ k2 ^ k3)

main()
