from schnorr import *
import base64
from pwn import *
import ast
import hashlib

s = remote('tcp.realworldctf.com', 20014)

s.recvuntil('starting with ')
prefix = s.recvline().rstrip()
for suffix in range(1000000):
    test = prefix + '%05x' % suffix
    if hashlib.sha1(test).hexdigest().endswith('0000'):
        s.send(test)
        break

# Key P1 to sign DEPOSIT command
priv, pub = generate_keys()

s.sendline(base64.b64encode('%d,%d' % pub))
s.sendline(base64.b64encode('1'))
sig = schnorr_sign('DEPOSIT', priv)
s.sendline(base64.b64encode(sig))

s.sendline(base64.b64encode('%d,%d' % pub))
s.sendline(base64.b64encode('3'))
s.recvuntil('one of us: ')
pub2 = ast.literal_eval(s.recvline())

# make a fake public key such that pub2 + fakepub == pub (P1)
fakepub = point_add((pub2[0], -pub2[1]), pub)
s.sendline(base64.b64encode('%d,%d' % fakepub))
s.sendline(base64.b64encode('2'))
sig = schnorr_sign('WITHDRAW', priv)
s.sendline(base64.b64encode(sig))

s.interactive()

# rwctf{P1Ain_SChNorr_n33Ds_m0re_5ecur1ty!}
